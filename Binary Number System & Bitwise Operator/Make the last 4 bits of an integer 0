#include <stdio.h>
#include<string.h>
#include<stdbool.h>
struct Binary{
    char str[50];
};
void strrev(char str[]){
     int len=strlen(str);
    int temp;
  for (int i = 0; i < len/2; i++)  
    {  
        
        temp = str[i];  
        str[i] = str[len - i - 1];  
        str[len - i - 1] = temp;  
    }  
}
struct Binary toBinary(unsigned int val,int k){
    struct Binary ans;
    int idx=0;
    while(val>0){
        int d=val%2;
        val=val/2;
        ans.str[idx]='0'+d;
        idx++;
    }
    ans.str[idx]='\0';
 
  for(int i=idx;i<k;i++) ans.str[i]='0';
  ans.str[k]=0;
  strrev(ans.str);
  return ans;
}
bool getBit(unsigned int mask,int k){
    return (mask & (1<<k))!=0;
}

unsigned int clearBit(unsigned int mask,int k){
    return mask & (0<<k);
}
// unsigned int clearBit(unsigned int mask,int k){
//     return mask & ~(1<<k);
// }



int main(){
  int x=211;
 
  printf("%s\n",toBinary(x,8).str);
  for(int i=4;i<8;i++){
     printf("%d",getBit(x,i));
  }
  
  for(int i=0;i<4;i++){
   
    
     x=toBinary(clearBit(x,i),4).str;
        
    
  }
  printf("%s\n",toBinary(x,4).str);
  
    return 0;
}

Input:
11010011

Output:
10110000
